; args: [unit, marker, target]

_unit = _this select 0
_marker = _this select 1
_target = _this select 2

_uid = [_unit, siPlayer, giPlayer] call funcCalcUID
? _uid > 12: hint "Fail to get UID, order not set. Try again please."; exit
_id = (playerOrderID select _uid) + 1; [_uid, _id] exec "Player\Order\New.sqs"

#CheckDistance
_vehicle = vehicle _unit; _posOrdered = getPos _vehicle; _distLimit = viewDistance; _hint = "Target is outside viewDistance. Order aborted."
? (upgMatrix select siPlayer) select upgLongWeaponRange == 2: _distLimit = 2*viewDistance; _hint = "Target is outside 2Ã—viewDistance. Order aborted."
? (typeOf _vehicle) in ["M1A1_Art_xj200", "T80_Art_xj200"]: _distLimit = 10000; _hint = "Target is very far. Probably can't hit it directly."
? _unit distance _target > _distLimit: _unit groupChat _hint; exit
? _unit distance _target < _distLimit && _unit distance _target > viewDistance: _unit groupChat "Target is far. Probably missing."
#PrepareToMove
? ([getPos _unit, _posOrdered] call funcDistH) < 50: goto "PrePareToAttack"
	_unit groupChat "Moving to attacking position."; _timeStart = time; _timeHint = _timeStart + 5*60; 
	_hint = {["I've been running for %1 minutes. Distance %2 meters now.", (_timeHint -_timeStart)/60, (_unit distance _target) - (_unit distance _target)%1]}
#CheckPosReached
	_unit doMove _posOrdered
	~5
	? call orderCheck : goto "Exit"
	? !(alive _unit) || _vehicle != vehicle _unit: goto "Exit"
	? time > _timeHint: call format _hint; _timeHint = _timeHint + 5*60
	? ([getPos _unit, _posOrdered] call funcDistH) > 50: goto "CheckPosReached"
#PrePareToAttack
	_unit groupChat "In position. Prepare to attack.";
	doStop _unit; driver _vehicle action ["ENGINE OFF", _vehicle]; _vehicle engineOn false	
	_weapon = (weapons _vehicle) select 0; _reloadMagazine = false
	#AttackCheck
		? _unit distance _target > _distLimit: goto "CheckDistance"
		? _vehicle ammo _weapon == 0: goto "CheckRearm"
		_vehicle reveal _target
		~0.1
		_vehicle doTarget _target
		
		; delay must be correctly assigned for "fire" command.
		_ammoArray = _vehicle ammoArray _weapon
		_delay = call format ["%1", (_ammoArray select 0) GetWeaponParam "reloadTime"] + 1
		? _reloadMagazine: _delay = call format ["%1", _weapon GetWeaponParam "magazineReloadTime"] + _delay; _reloadMagazine = false
		~_delay
		? call orderCheck : goto "Exit"
		? !(alive _unit) || _vehicle != vehicle _unit: goto "Exit"
		? ((_vehicle ammoArray _weapon) select 1) == 1: _reloadMagazine = true
		_vehicle fire _weapon
		~0.1
		_vehicle doWatch (getPos _target)
	goto "AttackCheck"
#CheckRearm
	_vs = [getPos _unit, 1500, (typesSupport select si0) + (typesSupport select si1), []] call funcGetNearbyVehicles
	? count _vs == 0 : _unit groupChat "No support vehicle near. Magazines exhausted. Order aborted."; goto "Exit"
	_distMin = 1500; _sup = objNull
	{ _dist = _unit distance (_x select 0); if (_dist < _distMin) then { _sup = (_x select 0); _distMin = _dist } } foreach _vs
	? isNull _sup : _unit groupChat "No support vehicle near. Magazines exhausted. Order aborted."; goto "Exit"
	_unit groupChat "Moving to support vehicle for more magazines."

	_timeAbort = time + 5*60
	#MoveToSupport
		_posMove = [[0,25], (getDir _sup)] call funcVectorRot
		_posMove = [getPos _sup, _posMove] call funcVectorSub
		_unit doMove _posMove
		~5
		? !(alive _unit) || _vehicle != vehicle _unit : goto "Exit"
		? call orderCheck : goto "Exit"
		? !(alive _sup) : goto "CheckRearm"
		? time > _timeAbort : _unit groupChat "Unable to reach support vehicle. Order aborted."; goto "Exit"
		? (_unit distance _sup) > 30 : goto "MoveToSupport"
	_unit groupChat "Rearming at support vehicle."; [_unit, _sup] exec "Player\Rearm.sqs"
	~30 + 1
	goto "PrepareToMove"

#Exit
	exit