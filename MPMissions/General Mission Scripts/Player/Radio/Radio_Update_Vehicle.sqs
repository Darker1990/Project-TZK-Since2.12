; args: [vehicle player]
_vehicle = _this select 0
? _vehicle == player : [_vehicle] exec "Player\Radio\Radio_Update_Vehicle_OnFoot.sqs"; exit

; clean up radio channels
[_vehicle] call loadFile "Player\Radio\Radio_Update_Vehicle_Common.sqf"

; Classifications below are defined in InitUnitTypes.sqs
#CheckVehicle
_vt = _vehicle call funcGetUnitTypeFromObject
? _vt == -1 : goto "CheckStructure"
? _vt in RadioTypesCustomCarShips : if ("Ship" countType [_vehicle] > 0) then {[_vehicle] exec "Player\Radio\Radio_Update_Vehicle_CustomShip.sqs"} else {[_vehicle] exec "Player\Radio\Radio_Update_Vehicle_CustomCar.sqs"}; exit
? _vt in RadioTypesArtUnits : [_vehicle] exec "Player\Radio\Radio_Update_Vehicle_Art.sqs"; exit
? _vt in RadioTypesShips : [_vehicle] exec "Player\Radio\Radio_Update_Vehicle_Ship.sqs"; exit

; Helis all can attach and support Heli is special in drop ammo crate. Support Plane is more a transport plane. Support Ship nothing to specialize.
? _vt in (RadioTypesSupport + [utMCVW, utMCVE, utMHQ0, utMHQ1]): if ("Land" countType [_vehicle] > 0) then {[_vehicle] exec "Player\Radio\Radio_Update_Vehicle_SupportLand.sqs"}; exit

; Transport Helis and Planes are similar. Support Heli is special in drop ammo crate.
? _vt in RadioTypesTransportPlane + RadioTypesTransportHeli : [_vehicle] exec "Player\Radio\Radio_Update_Vehicle_TransportAir.sqs"; exit

; Check vehicle's "transportSoldier" to decide whether is a transport Heli or not
? _vt in RadioTypesGunships : [_vehicle] exec "Player\Radio\Radio_Update_Vehicle_Gunship.sqs"; exit

; Plane with AfterBurner in TZK is only allowed to be A10/Su25
? _vt in RadioTypesPlane : [_vehicle] exec "Player\Radio\Radio_Update_Vehicle_Plane.sqs"; exit

; Transport Land Vehicles. Ship will enter script above thus won't reach here.
? _vt in (typesTransportCar + typesTransportAPC) : [_vehicle] exec "Player\Radio\Radio_Update_Vehicle_TransportLand.sqs"; exit

; Vehicle doesn't have special Actions
[_vehicle] call loadFile "Player\Radio\Radio_Update_Vehicle_Common.sqf"; exit


#CheckStructure
_vt = _vehicle call funcGetStructTypeFromObject
? _vt == -1 : goto "Abnormal"
? _vt in structsOccupiableM46Art : [_vehicle] exec "Player\Radio\Radio_Update_Vehicle_Art.sqs"; exit

; Structure doesn't have special Actions
[_vehicle] call loadFile "Player\Radio\Radio_Update_Vehicle_Common.sqf"; exit


#Abnormal

; Parachute. In crCTI when player in Parachute the "Options" action invalid. No modifying there but add "Options" in radio.
? "ParachuteBase" countType [_vehicle] > 0 : [_vehicle] call loadFile "Player\Radio\Radio_Update_Vehicle_Parachute.sqf"; exit

[_vehicle] call loadFile "Player\Radio\Radio_Update_Vehicle_Common.sqf"; exit

; EOF