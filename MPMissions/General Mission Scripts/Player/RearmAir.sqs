; args: [unit, truck, <vehicle>]

_unit = _this select 0
_support = _this select 1
_vehicle = vehicle _unit
? (count _this) > 2 : _vehicle = _this select 2


? (_vehicle distance _support) > 2*rangeSupportPlane : _msg = "support plane out of range"; goto "Exit"

? _unit == player && _unit == _vehicle : [_unit, _support, false, 1] exec "Player\Dialog\Equipment.sqs"; Exit

_msg = ""
_vehicleRearm = _unit
_timeRearm = 5
? _unit != _vehicle : _vehicleRearm = _vehicle; _timeRearm = 30
? _vehicleRearm in vehiclesRearming : _msg = "Rearm not started, rearm of vehicle already in progress."; if (_unit == player) then {hint _msg}; _unit groupchat _msg; exit

; player globalchat format["_type=%1  unit: %2", _type, (unitDefs select _type) select udName ]

_type = _vehicleRearm call funcGetUnitTypeFromObject
? (_type in vDoubleRearmTime): _timeRearm = 30*2
? (_type in vTripleRearmTime): _timeRearm = 30*3
? (_type in vSixfoldRearmTime): _timeRearm = 30*6
? (_type in vTenfoldRearmTime): _timeRearm = 30*10
? dev : _timeRearm = 5


? _type == -1 : goto "CheckStruct"
; TODO ? _type == (utCustom select siPlayer) && _unit == _vehicle : [_unit, _support, false, 1] exec "Player\Dialog\Equipment.sqs"; exit
_cost = (unitDefs select _type) select udCost
goto "CheckData"

#CheckStruct
_type = _vehicleRearm call funcGetStructTypeFromObject
? _type == -1 : format["ERROR: object type not found for %1/%2 in Rearm.sqs", _vehicleRearm, typeOf _vehicleRearm] call fDebugLog; exit
_cost = (structDefs select _type) select sdCost

#CheckData
_rearmData = _vehicleRearm call funcGetRearmData
_weapons = _rearmData select 0
_mags = _rearmData select 1
? (count _mags) == 0 : _msg = "Unit is not armed."; goto "Exit"
? !(canFire _vehicle) : _unit groupChat "Gun barrel badly hurt. Better repair as well."

; CALC REARM COST
_money = (groupMoneyMatrix select siPlayer) select giPlayer

? _unit != _vehicleRearm : goto "RearmVehicle"

#RearmInfantry
	_cost = [_unit, _weapons, _mags] call loadFile "Common\SQF\CalRearmCost.sqf"
	? _cost > _money : _msg = format["Not enough money for rearm. ($%1 needed)", _cost]; goto "Exit"
	
	? !(local _vehicleRearm) : _msg = "Rearm failed. Soldier is not local."; goto "Exit"
  ; TODO _vehicleRearm setCombatMode "BLUE"
  ~_timeRearm
	? !(alive _vehicleRearm) : _msg = ""; goto "Exit"
	; TODO ? !(alive _support) : _msg = "Rearm failed, support plane destroyed."; _vehicleRearm setCombatMode "YELLOW"; goto "Exit"
	? !(alive _support) : _msg = "Rearm failed, support plane destroyed."; goto "Exit"
  removeAllWeapons _vehicleRearm
  ; add custom throw/put
  { _vehicleRearm addWeapon _x } forEach weaponsCustom
  ? count (magazines _vehicleRearm) > 0 : format["ERROR: soldier '%1-%2' has mags in Rearm.sqs", _vehicleRearm, typeOf _vehicleRearm] call fDebugLog; exit
  { _vehicleRearm addMagazine _x } foreach _mags
  ? count (weapons _vehicleRearm) > 0 : format["ERROR: soldier '%1-%2' has weapons in Rearm.sqs", _vehicleRearm, typeOf _vehicleRearm] call fDebugLog; exit
  { _vehicleRearm addWeapon _x } foreach _weapons
  ; TODO _vehicleRearm setCombatMode "YELLOW"
  goto "RearmEnd"

#RearmVehicle
	_cost = _cost/10
	_cost = _cost - (_cost % 1)
	? _cost < 50 : _cost = 50
	? _cost > _money : _msg = format["Not enough money for rearm. ($%1 needed)", _cost]; goto "Exit"

  if (local _vehicleRearm) then { { _vehicleRearm removeMagazines _x } foreach (magazines _vehicleRearm) } else { [_vehicleRearm] exec "Common\SendVehicleMagsRemove.sqs" }
  vehiclesRearming set [count vehiclesRearming, _vehicleRearm]
  _msg = format["Rearm started, ready in %1s ...", _timeRearm]
  ? _unit == player : hint _msg
  _unit groupchat _msg
  _timeComplete = time + _timeRearm
  #Loop
	 _vehicleRearm say "Rearming_xj400";
	~5
  	? !(alive _vehicleRearm) : _msg = "Rearm failed. Vehicle destroyed."; goto "Exit"
  	? !(alive _support) : _msg = "Rearm failed. Support plane destroyed."; goto "Exit"
	  ? (_vehicleRearm distance _support) > 2*rangeSupportPlane : if (([positionAttach, (getPos _vehicleRearm)] call funcDistH) > 100 && ([positionAttach, (getPos _support)] call funcDistH) > 100) then {_msg = "Rearm failed. Support plane out of range."; goto "Exit"}
	  ? time < _timeComplete : goto "Loop"

  ? count (magazines _vehicleRearm) == 0 : [_vehicleRearm] exec "Common\Msg\sRearmVehGeneral.sqs"
  ? (_type in vSixfoldRearmTime) : _vehicleRearm say "NuclearMissileReady_xj400"

#RearmEnd
  ? _cost > 0 : [_cost] exec "Player\SendMoneySpent.sqs"
  _msg = format["Rearm Complete. $%1", _cost]

#Exit
  ? _msg != "" && _unit == player : hint _msg
  ? _msg != "" : _unit groupchat _msg
	? _unit != _vehicleRearm : vehiclesRearming = vehiclesRearming - [_vehicleRearm]
	exit
