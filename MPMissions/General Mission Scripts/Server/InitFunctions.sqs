; args: none
; This script is designed for using string to take place of SQF, aiming to sacrifice efficiency to reduce sever burden.

fBuildStruct = preprocessFile "Server\BuildStruct.sqf"
funcRepairStructure = preprocessFile "Server\RepairStructure.sqf"
funcFindNullForward = {private ["_c", "_i", "_found"];_c = count _this; _i = _c; _found = false;while "_i > 0 && !_found" do {_i = _i - 1;if (isNull (_this select _i)) then {_found = true};};if(!_found)then{_i=-1};_i}

funcCheckRepair = preprocessFile "Server\AI_CheckRepair.sqf"
funcCheckRearm = preprocessFile "Server\AI_CheckRearm.sqf"
funcMoveAI = {private [ "_x", "_unit", "_pos", "_v", "_crew" ];_unit = _this select 0;_pos = _this select 1;_v = vehicle _unit;if ( _unit == _v ) then{if(([getPos _unit, _pos] call funcDistH) > 500)then{_unit setUnitPos "UP"}else{_unit setUnitPos "AUTO"};_unit doMove _pos}else{_crew = [commander _v, gunner _v, driver _v];_crew = _crew - [objNull];{ if (alive _x && local _x) then { _x doMove _pos } } foreach _crew};}
funcMoveStand = preprocessFile "Server\MoveStand.sqf"
funcUpdateKnowsAbout = {private ["_target", "_si", "_siEnemy", "_kaMax", "_group", "_siEnemy", "_groups", "_ka", "_x"];_target = _this select 0;_si = _this select 1;_siEnemy = _this select 2;_kaMax = 0;_group = grpNull;_groups = [];if (_si != _siEnemy) then{_groups = (groupMatrix select _siEnemy) + (townGroups select _siEnemy) + (workerGroups select _siEnemy);{ _ka = (_x knowsAbout _target); if ( _ka > _kaMax) then { _kaMax = _ka; _group = _x } } forEach _groups;};[_kaMax, _group, _groups]}
funcWatch = {private [ "_x", "_unit", "_si", "_gi", "_v", "_crew", "_iWatch", "_pos", "_posWatch", "_dir" ];_unit = _this select 0;_si = _this select 1;_gi = _this select 2;_iWatch = ((aiSetting select _si) select _gi) select aisWatch; _v = vehicle _unit;_pos = getPos _v;_crew = [commander _v, gunner _v, driver _v];_crew = _crew - [objNull];if (_iWatch == 0) then {_dir = random 360} else {_dir = 45*(_iWatch - 1};_posWatch = [(_pos select 0) + 200*(sin _dir), (_pos select 1) + 200*(cos _dir)];{ _x doWatch _posWatch } foreach _crew;}

funcAddServerUnit = preprocessFile "Server\AddServerUnit.sqf"
funcCalcSlots = preprocessFile "Server\CalcSlots.sqf"

funcGetIdleFactory = preprocessFile "Server\GetIdleFactory.sqf"
funcGetIdleFactories = {private ["_x", "_res", "_structs"];_res = [];_structs = (structMatrix select (_this select 0)) select (_this select 1);{if (!(isNull _x) && (alive _x) && !(_x in buildingsInUse)) then{if ( !(_this select 2) ) then{_res = _res + [_x];}else { if ( ( ([getPos _x, _this select 0, stComm] call funcGetClosestStructure) select 1) < CCdistMax select (_this select 0) ) then{_res = _res + [_x];}; };};} foreach _structs;_res}

funcGetFactoryWithEmptyQueue = preprocessFile "Server\GetFactoryWithEmptyQueue.sqf"

funcGetNearbyTransports = {private ["_x", "_posOrigin", "_distMax", "_pos", "_vehicles", "_distance"];_posOrigin = _this select 0;_distMax = _this select 1;_vehicles = [];{if !(isNull _x) then{_pos = getPos _x;_distance = [_pos, _posOrigin] call funcDistH;if (alive _x && _distance < _distMax ) then{_vehicles set [count _vehicles, [_x, _distance]];}}} forEach TransportActivatedVehicles;_vehicles}

funcUpdateTownCheckUnits = {private [ "_units", "_groups", "_index", "_count", "_unit", "_pos", "_x", "_group" ];_units = [0,0,0];_groups = [ [], [], [] ];_index = 0;_count = count _this;while "_index < _count" do{_unit = _this select _index;_pos = getPos _unit;if ((_pos select 2) < 3) then{{if ( (side _unit) == (sides select _x) ) then{_units set [_x, (_units select _x) + 1];_group = group _unit;if !(_group in (_groups select _x)) then{(_groups select _x) set [count (_groups select _x), _group]};};} forEach [si0, si1, siRes];};_index = _index + 1;};[_units, _groups]}
funcUpdateResStartPos = preprocessFile "Server\UpdateResStartPos.sqf"

funcAssignJoinAI = preprocessFile "Server\AssignJoinAI.sqf"

exit

fBuildStruct = preprocessFile "Server\BuildStruct.sqf"
funcRepairStructure = preprocessFile "Server\RepairStructure.sqf"

funcMoveAI = preprocessFile "Server\MoveAI.sqf"

funcGetIdleFactory = preprocessFile "Server\GetIdleFactory.sqf"
funcGetIdleFactories = preprocessFile "Server\GetIdleFactories.sqf"
funcGetFactoryWithEmptyQueue = preprocessFile "Server\GetFactoryWithEmptyQueue.sqf"

funcWatch = preprocessFile "Server\Watch.sqf"

funcGetNearbyTransports = preprocessFile "Server\GetNearbyTransports.sqf"
funcCalcSlots = preprocessFile "Server\CalcSlots.sqf"
funcFindNullForward = {private ["_c", "_i", "_found"];_c = count _this; _i = _c; _found = false;while "_i > 0 && !_found" do {_i = _i - 1;if (isNull (_this select _i)) then {_found = true};};if(!_found)then{_i=-1};_i}
funcCheckTGSpawn = preprocessFile "Server\CheckTGSpawn.sqf"
funcCheckRepair = preprocessFile "Server\AI_CheckRepair.sqf"
funcCheckRearm = preprocessFile "Server\AI_CheckRearm.sqf"
funcUpdateKnowsAbout = preprocessFile "Server\UpdateKnowsAbout.sqf"
funcUpdateTownCheckUnits = preprocessFile "Server\UpdateTownCheckUnits.sqf"

funcAddServerUnit = preprocessFile "Server\AddServerUnit.sqf"
funcUpdateResStartPos = preprocessFile "Server\UpdateResStartPos.sqf"
funcAssignJoinAI = preprocessFile "Server\AssignJoinAI.sqf"