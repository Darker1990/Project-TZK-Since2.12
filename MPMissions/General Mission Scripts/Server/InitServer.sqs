;player globalchat "InitServer.sqs Entered"
;DEFINE CONSTANT POINTER FOR FUNCTION
;TG0 = townGroups select si0; TG1 = townGroups select si1; WG0 = workerGroups select si0; WG1 = workerGroups select si1; GM0 = groupMatrix select si0; GM1 = groupMatrix select si1
{deleteVehicle (leader _x)} forEach (workerGroups select si0); {deleteVehicle (leader _x)} forEach (workerGroups select si1)

; local bool variable of game mode. On server they should be global

[] exec "Server\InitFunctions.sqs"

busyInit = "call format[{busy%1 = []}, sideNames select _si]"; busySet = "call format[{[_this,_si] exec {Server\BusySet.sqs}}]"; busyClear = "call format[{[_this,_si] exec {Server\BusyClear.sqs}}]"; busyCheck = "call format[{_this in busy%1}, sideNames select _si]"; mutexBusy = false
temporaryInit = "call format[{temporary%1 = []}, sideNames select _si]"; temporarySet = "call format[{[_this,_si] exec {Server\TemporarySet.sqs}}]"; temporaryClear = "call format[{[_this,_si] exec {Server\TemporaryClear.sqs}}]"; temporaryCheck = "call format[{_this in temporary%1}, sideNames select _si]"; mutexTemporary = false
_si = si0; call busyInit; call temporaryInit; _si = si1; call busyInit; call temporaryInit

; busySet = "_this setSkill (skill _this) - 0.0002"; busyClear = "_this setSkill (skill _this) + 0.0002"; busyCheck = "(skill _this) < 0.9999"
; temporarySet = "_this setSkill (skill _this) - 0.0001"; temporaryClear = "_this setSkill (skill _this) + 0.0001"; temporaryCheck = "(skill _this) == 0.9999"
ResDestroyStruct = []; mutexResDestStruct = false


CheckSupportUnits = []; mutexCheckSupport = false

repairableStructureMatrix = [ [], [] ]; repairableStructureInfo = [ [], [] ]; mutexRepStructMatrix = false; mutexRepairStructure = false
structServer = []; structsServer = []; mutexStructServer = false
primStructsPlaced = []; mutexPlacedPrimStructs = false
factoryQueues = [ [], [] ]; mutexFacQueues = false
buildingsInUse = []; mutexbuildingInUse = false
undoList = []; mutexUndo = false

startMoney = [[40000, 40000],[80000, 80000]] select PricingMode
? (dev): startMoney = [800000, 800000]
startMoneyPlayer = [1000, 1000]
? (dev): startMoneyPlayer = [2000, 2000]
moneySpent = [0, 0]
moneyRequest = [[],[]]
indexMoneyMsg = 0
countMoneyMsg = 10
indexInfoMsg = 0
countInfoMsg = 4
qidNext = [0,0]
qidCancel = [[],[]]
qidToCancel = [[],[]]

timeCheckSupport = 120
ratioAttackEnemy = ([0.70, 0.70] select dev)

countQueueMsg = 5
indexQueueAddMsg = 0
indexQueueRemMsg = 0
indexUnitAddMsg = 0
mutexBuildingQueue = false
mutexEditMoneyMatrix = false
mutexMovingToSupport = false
mutexSendMoneySide = false
mutexEnemySpotted = false
mutexqidCancel = false
mutexFuelVehicle = false

scoreMoney = [[],[]]
groupsPatrol = []; groupPatrolJoinMatrix = []; mutexInitResGroups = false; mutexResPatrolScript = false

mutexAddResPatrol = false
mutexWorkerJoin = false

_targetObject = {Target_TZK_xj400}
; ? bool_TZK_Vanilla_Mode: _targetObject = "HeliH"
_i = 0; countTargetMarkers = 10; while "_i < countTargetMarkers" do {call Format["TargetS_%1%2 = _targetObject camCreate [0,0,0]; TargetS_%1%2 exec {Common\Command\allowDamageFalse.sqs}; TargetS_%1%3 = _targetObject camCreate [0,0,0]; TargetS_%1%3 exec {Common\Command\allowDamageFalse.sqs}", _i, si0, si1]; _i = _i + 1}
; Should better use camCreate than createVehicle. Its position don't have to be broadcast.

; mutexAIAutoBuyFactory = false

; MESSAGE HANDLERS (SERVER ONLY)
[] exec "Server\MsgBuildStructure.sqs"
[] exec "Server\MsgUndo.sqs"
[] exec "Server\MsgAddWorker.sqs"
[] exec "Server\MsgBuyUnit0.sqs"
[] exec "Server\MsgBuyUnit1.sqs"
[] exec "Server\MsgBuyUnit2.sqs"
[] exec "Server\MsgBuyUnit3.sqs"
[] exec "Server\MsgBuyUnit4.sqs"
[] exec "Server\MsgCancelBuy.sqs"
[] exec "Server\MsgMoneySpent.sqs"
[] exec "Server\Msg\mGiveMoney.sqs"
[] exec "Server\MsgUpgrade.sqs"
[] exec "Server\MsgTransferCommand.sqs"
[] exec "Server\MsgDestruction.sqs"
[] exec "Server\MsgUnitDisembark.sqs"
[] exec "Server\MsgJoin.sqs"
[] exec "Server\MsgCheckAI.sqs"
[] exec "Server\MsgClearBuy.sqs"
[] exec "Server\MsgEjectAIUnits.sqs"
; ? bool_TZK_199_Mode: [] exec "Server\Msg\mRadioChannel.sqs"

? !(isNull player): forceMap true
? !(isNull player): [] exec "Player\InitClient.sqs"

pingTimes = [[], []]
blockedPlayers = [[], []]
_si = si0; _gi = 0; { (pingTimes select _si) set [_gi, -1]; (blockedPlayers select _si) set [_gi, false]; _gi = _gi + 1} foreach (groupMatrix select _si)
_si = si1; _gi = 0; { (pingTimes select _si) set [_gi, -1]; (blockedPlayers select _si) set [_gi, false]; _gi = _gi + 1} foreach (groupMatrix select _si)

;game has begun after this pause
~2

; NOTE: locality of players must be determined after game start on server
_index = 0
_groups = groupMatrix select si0
_groupsAI = []
_count = count _groups
? (_count == 0): goto "CheckGroupSide0Empty"
#CheckGroupSide0
	_leader = leader (_groups select _index)
	? ( local _leader && !(player == _leader) ): _groupsAI set [count _groupsAI, group _leader]; [_leader, si0, _index] exec "Server\InitLeaderAI.sqs"
	? !(local _leader): [group _leader, si0, _index] exec "Server\Loop\DetectPlayerDisconnect.sqs"
		(scoreMoney select si0) set [_index, 0]
	_index = _index + 1
	? (_index < _count): goto "CheckGroupSide0"
#CheckGroupSide0Empty
groupAiMatrix set [si0, _groupsAI]

_index = 0
_groups = groupMatrix select si1
_groupsAI = []
_count = count _groups
? (_count == 0): goto "CheckGroupSide1Empty"
#CheckGroupSide1
	_leader = leader (_groups select _index)
	? ( local _leader && !(player == _leader) ): _groupsAI set [count _groupsAI, group _leader]; [_leader, si1, _index] exec "Server\InitLeaderAI.sqs"
	? !(local _leader): [group _leader, si1, _index] exec "Server\Loop\DetectPlayerDisconnect.sqs"
		(scoreMoney select si1) set [_index, 0]
	_index = _index + 1
	? (_index < _count): goto "CheckGroupSide1"
#CheckGroupSide1Empty
groupAiMatrix set [si1, _groupsAI]

{ call format ["_spec%1exists = if (isNull Spec%1) Then {false} Else {true}, if (_spec%1exists && (local Spec%1) && player != Spec%1) then {deleteVehicle Spec%1}", _x] } forEach [0,1,2,3,4,5,6,7,8,9]


;pvDebugVars = true; PublicVariable "pvDebugVars"

[] exec "Server\GenerateStartPositions.sqs"

; send AI groups
_try = 0
{ _gi = ( groupMatrix select si0 ) find ( _x ); while "_try < 10 && _gi == -1" do {_gi = ( groupMatrix select si0 ) find ( _x );_try = _try + 1}; [si0, _gi] exec "Server\Info\GroupIsAI.sqs" } foreach (groupAiMatrix select si0)
_try = 0
{ _gi = ( groupMatrix select si1 ) find ( _x ); while "_try < 10 && _gi == -1" do {_gi = ( groupMatrix select si1 ) find ( _x );_try = _try + 1}; [si1, _gi] exec "Server\Info\GroupIsAI.sqs" } foreach (groupAiMatrix select si1)

_si = si0
? bool_TZK_199_Mode && !dev && (groupMatrix select _si select 0) in (groupAiMatrix select _si): startMoney set [_si, 57500+10000]
? bool_TZK_199_Mode && !dev && count (groupMatrix select _si) == count (groupAiMatrix select _si): startMoney set [_si, (startMoney select _si) * 2], goto "Money0Set"

? !bool_TZK_199_Mode && !dev && count (groupMatrix select _si) == count (groupAiMatrix select _si): startMoney set [_si, 10*(startMoney select _si)], if ((groupMatrix select (siEnemy select _si) select 0) in (groupAiMatrix select (siEnemy select _si))) Then {startMoney set [_si, 0.5*(startMoney select _si)]}, goto "Money0Set"
? !bool_TZK_199_Mode && !dev && (groupMatrix select _si select 0) in (groupAiMatrix select _si): startMoney set [_si, 10*0.5*(startMoney select _si)], startMoneyPlayer set [_si, 14*(startMoneyPlayer select _si)]
#Money0Set
_si = si1
? bool_TZK_199_Mode && !dev && (groupMatrix select _si select 0) in (groupAiMatrix select _si): startMoney set [_si, 57500+10000]
? bool_TZK_199_Mode && !dev && count (groupMatrix select _si) == count (groupAiMatrix select _si): startMoney set [_si, (startMoney select _si) * 2], goto "Money1Set"

? !bool_TZK_199_Mode && !dev && count (groupMatrix select _si) == count (groupAiMatrix select _si): startMoney set [_si, 10*(startMoney select _si)], if ((groupMatrix select (siEnemy select _si) select 0) in (groupAiMatrix select (siEnemy select _si))) Then {startMoney set [_si, 0.5*(startMoney select _si)]}, goto "Money1Set"
? !bool_TZK_199_Mode && !dev && (groupMatrix select _si select 0) in (groupAiMatrix select _si): startMoney set [_si, 10*0.5*(startMoney select _si)], startMoneyPlayer set [_si, 14*(startMoneyPlayer select _si)]
#Money1Set

[] exec "Server\SendStartMoney.sqs"
[si0] exec "Server\UpdateRespawnAI.sqs"; [si1] exec "Server\UpdateRespawnAI.sqs"

[] exec "Server\Start\Income.sqs"
[] exec "Server\Start\Server.sqs"
[] exec "Server\SendPing.sqs"

[] exec "Server\DynamicInitializationMarker.sqs"
[] exec "Server\DynamicInitializationTrigger.sqs"
[] exec "Server\DynamicInitializationGroup.sqs"

; after data initialized and before forcemap canceled
~2
music0 = (-0.5 + random count Musics0)
music1h = (-0.5 + random count Musics1h)
music10m = (-0.5 + random count Musics10m)
PublicVariable "music0"; PublicVariable "music1h"; PublicVariable "music10m"; 

; west setFriend [east,1]; west setFriend [resistance,1]; east setFriend [west,1]; east setFriend [resistance,1]; resistance setFriend [west,1]; resistance setFriend [east,1]
? bool_TZK_199_Mode: {[_x] exec "Common\KeepTempLeaderAlive.sqs"} forEach [leaderTemp0, leaderJoin0, leaderTemp1, leaderJoin1]


; ================================================================================TZK_4.0.0 Block================================================================================
; Vote System. Server Design. Requiring "AI group leader" judged results. No problem for after-start delay, but msg script should start after variables having defined.
voteRate = 0.33; VoteMassComm = [2, 1] select bool_TZK_199_Mode; VoteMassAdmin = 1000; Vote_Result = []; {Vote_Result set [ count Vote_Result, [] ]} forEach Vote_Matrix
call loadFile "Server\Init\Vote.sqf"
; format of Vote_Result elements: [voted value, mass of voter, si, gi]
; Vote_Options_Name = []; {Vote_Options_Name set [count Vote_Options_Name, _x select 0]} forEach Vote_Matrix

[] exec "Server\Msg\mVoteReceived.sqs"
[] exec "Server\Vote\Mass_Reset.sqs"

estimatedTimeLeft 7200

_sides = [si0, si1]; _i = 0
#Init_AI_Upg
_si = _sides select _i
? count (groupMatrix select _si) == count (groupAiMatrix select _si): {(upgMatrix select _si) set [_x, 2], [_si, _x, 2] exec "Server\Info\UpgState.sqs"} forEach [upgGunshipRocket, upgLongWeaponRange]
~1
_i = _i + 1
? _i < count _sides: goto "Init_AI_Upg"
; ================================================================================TZK_4.0.0 Block================================================================================