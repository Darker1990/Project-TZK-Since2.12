; args: [_this array of Order, intermediate status of Order]

_unit = _this select 0 select 0
_si = _this select 0 select 1
_gi = _this select 0 select 2

_sleep = _this select 1 select 0
_order = orderMatrix select _si select _gi; _idOrder = _order select 0; _script = (orderDefs select (_order select 1)) select 2
~_sleep
? _idOrder != _order select 0: exit
_sleep = 30
? _unit call temporaryCheck: _this exec format["Server\Loop\Or\%1", _script]; exit
? _unit call busyCheck: _this exec format["Server\Loop\Or\%1", _script]; exit

_params = _this select 0 select 3
_distDefend = 500*((_params select 0) + 1)
_timeDefend = 5*60*((_params select 1) + 1)

_timeAbort = _this select 1 select 1
_timeCheckSupport = _this select 1 select 2
_bTakeTown = _this select 1 select 3
_ti = _this select 1 select 4
_setting = aiSetting select _si select _gi

? !_bTakeTown: goto "HoldTown_Update"

#TakeTown
	? !(alive _unit) : exit
	? _idOrder != _order select 0 : exit

	? _unit != driver vehicle _unit : _sleep = 30; _bTakeTown = true; goto "NextLoop"
	
	? time > _timeCheckSupport : _timeCheckSupport = time + timeCheckSupport; [_unit, _si, _gi] exec "Server\AI_CheckSupport.sqs"; _sleep = 10; _bTakeTown = true; goto "NextLoop"
	
	? _ti == -1 : goto "CheckTown"
	
	? ((towns select _ti) select tdSide) == _si : if (((vehicle _unit) distance _flag) < _distDefend ) then { goto "HoldTown" }
	
	#CheckTown
		_res = [getPos _unit, _si, []] call funcGetClosestEnemyTown
		_tiNear = _res select 0
		? _tiNear == -1 : _sleep = 30; _bTakeTown = true; goto "NextLoop"
		_distNear = _res select 1
		_res = [getPos _unit, _si, [_tiNear]] call funcGetClosestEnemyTown
		_tiNextNear = _res select 0
		_distNextNear = _res select 1
		? (_distNextNear/_distNear) > 2 : _ti = _tiNear
		? _ti == -1 : _ti = ([_tiNear, _tiNextNear] select ((random 1) < 0.5))
		
		_flag = (towns select _ti) select tdFlag
		_distToDest = (vehicle _unit) distance _flag
		? _distToDest > 10 : goto "TakeTown_Move"
		[_unit, true] exec "Server\StopAI.sqs"
		[_unit, _si, _gi] call funcWatch
		_sleep = 30
	_bTakeTown = true; goto "NextLoop"
	#TakeTown_Move
		[_unit, getPos _flag] call funcMoveAI
		_sleep = [30, 0.1*_distToDest] select (_distToDest < 300)
		_bTakeTown = true
	goto "NextLoop"

#HoldTown
	_timeAbort = time + _timeDefend
	_pos = [getPos _flag, 5, 100] call funcGetRandomPos
#HoldTown_Update
	? !(alive _unit): exit
	? _idOrder != _order select 0 : exit
	? _unit != driver vehicle _unit : _sleep = 30; _bTakeTown = false; goto "NextLoop"
	
	? time > _timeCheckSupport : _timeCheckSupport = time + timeCheckSupport; [_unit, _si, _gi] exec "Server\AI_CheckSupport.sqs"; _sleep = 30; _bTakeTown = false; goto "NextLoop"
  
	? ((towns select _ti) select tdSide) != _si : goto "TakeTown"
	? time > _timeAbort : _ti = -1; goto "TakeTown"

	_distToDest = [getPos _unit, _pos] call funcDistH
	
	? _distToDest > 10 : goto "HoldTown_Move"
		[_unit, true] exec "Server\StopAI.sqs"
		[_unit, _si, _gi] call funcWatch
		_sleep = 30
		_bTakeTown = false; goto "NextLoop"

	#HoldTown_Move
		[_unit, _pos] call funcMoveAI
		_sleep = [30, 0.1*_distToDest] select (_distToDest < 300)
		_bTakeTown = false
#NextLoop
	[_this select 0, [_sleep, _timeAbort, _timeCheckSupport, _bTakeTown, _ti]] exec format["Server\Loop\Or\%1", _script]
	exit
