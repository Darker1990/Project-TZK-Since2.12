; args: [group, timePatrol, timeDestroy, sensor]

_group = _this select 0
_timePatrol = _this select 1
_timeDestroy = _this select 2
_sensor = _this select 3
_posPatrol = getPos _sensor

~ 120
@!mutexResPatrolScript
mutexResPatrolScript = true
? (count (units _group)) == 0: goto "NextLoop"
_group setCombatMode "RED"; _group setBehaviour "COMBAT"; _group setSpeedMode "NORMAL"

? time < _timePatrol : goto "Patrol"
? time > _timeDestroy : goto "Destroy"

#TakeTown
	_res = [-1,0]
	_units = units _group; _count = count _units; _index = 0
	#TakeTownUnits
	? _index >= _count: goto "TownChecked"
	_unit = _units select _index
	? _unit != driver vehicle _unit: _index = _index + 1; goto "TakeTownUnits"
	_res = [getPos _unit, siRes, []] call funcGetClosestEnemyTown
	? (_res select 0) == -1: goto "Patrol"
	_flag = (towns select (_res select 0)) select tdFlag; vehicle _unit doMove ([getPos _flag,4, 4] call funcGetRandomPos)
	~2
	_index = _index + 1; goto "TakeTownUnits"
	
	#TownChecked
	? (_res select 0) != -1 : goto "NextLoop"
	; Return to patrol if no enemy town.
	
#Patrol
	? time < ([60*10, 60*0] select dev): goto "NextLoop"
	_posPatrol = _posPatrol call loadFile "Server\SQF\ResPatrolPos.sqf"; _sensor setPos _posPatrol
	{ if (_x == driver vehicle _x) then { _x doMove ([_posPatrol, 10, 20] call funcGetRandomPos) } } foreach (units _group)
	goto "NextLoop"

#Destroy
	_units = units _group; _count = count _units; _index = 0
	#DestroyUnits
	_unit = _units select _index

	_res1 = [getPos _unit, si0] call funcGetClosestEnemyObject;
	_res0 = [getPos _unit, si1] call funcGetClosestEnemyObject;
	_comparison = (_res0 select 1) < (_res1 select 1); _object = [_res1 select 0, _res0 select 0] select _comparison; _distance = [_res1 select 1, _res0 select 1] select _comparison

	_comparison = ( _distance < (1 + time/3600)*viewDistance )
	? _comparison : if (_unit == driver vehicle _unit) then {[_unit, ([getPos _object, 50, 100] call funcGetRandomPos), 10] exec "Common\DelayMove.sqs"}; if (_unit != vehicle _unit && _unit == gunner vehicle _unit && (_unit distance _object) < 200) then {[_unit, _object] exec "Server\DestroyObject.sqs"};
	? !_comparison && _unit == driver vehicle _unit: _res0 = [getPos _unit, siRes, []] call funcGetClosestEnemyTown; if ((_res0 select 0) != -1) then {_flag = (towns select (_res0 select 0)) select tdFlag; _unit doMove ([getPos _flag, 4, 4] call funcGetRandomPos)};

	_index = _index + 1
	~2
	? _index < _count : goto "DestroyUnits"

	goto "NextLoop"
	
#NextLoop
	mutexResPatrolScript = false
	[_group, _timePatrol, _timeDestroy, _sensor] exec "Server\Loop\ResPatrolGroup.sqs"
	exit