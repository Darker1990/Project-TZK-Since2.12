; args: [unit, si, gi, [duration]]

_unit = _this select 0
_si = _this select 1
_gi = _this select 2
_params = _this select 3

; Get Correct Parameters. Need Pay Attention To Coefficients
_duration = 6 * ((_params select 0) + 1)

; Check Whether Unit Fits The Parameters Of The Temporary Order
_vehicle = vehicle _unit
? _unit == _vehicle : exit
? "Air" countType [_vehicle] > 0: exit

; Check Whether Unit In Another Temporary Order (Except For Set Flight Altitude, Clear Temporary Order, Etc)
? _unit call temporaryCheck : _vehicle engineOn false; exit

; Initialize The Order Script
_timeStart = time; _timeAbort = _timeStart + _duration; _timeUp = _timeStart; _cycle = 6; _loop = 0
_unit call temporarySet


; Wait For Unit Finish Its Busy-Work
#WaitReady
~5
? time > _timeAbort : 	_unit call temporaryClear; exit
? !_unit call temporaryCheck : exit
? _unit call busyCheck : goto "WaitReady"

; Main Part Of Temporary Order


_groups = groupMatrix select _si
#Update
	_gi = ( _groups ) find ( (group _unit) )
	_vehicle = vehicle _unit
	? _unit != driver _vehicle : goto "Sleep"

	[_unit, true] exec "Server\StopAI.sqs"
	_vehicle engineOn false
	
	[_unit, _si, _gi] call funcWatch
	? _unit != _vehicle && !(isNull gunner _vehicle) && isNull (commander _vehicle) : [_unit, _si, _gi] exec "Server\AI_CheckFireGun.sqs"
	goto "Sleep"



; End Of File
#EOF
_unit call temporaryClear
exit


#Sleep
_loop = (time-_timeStart)/_cycle; _loop = 1 + _loop - _loop%1
_timeUp = _loop*_cycle + _timeStart

@ ( time > _timeUp || !_unit call temporaryCheck )
? !_unit call temporaryCheck : goto "EOF"
? !(alive _unit) || time > _timeAbort : goto "EOF"
? _unit call busyCheck : goto "Sleep"
goto "Update"