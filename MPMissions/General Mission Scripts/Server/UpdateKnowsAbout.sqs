; args: [unit, si, ka, dist]

? !isServer : exit

_unit = _this select 0
_si = _this select 1
_kaReport = _this select 2
_dist = _this select 3

_interval = 20
? _si == siRes: goto "ResUnits"
_timeLastSent = -60
_siEnemy = siEnemy select _si; _groups = (groupMatrix select _siEnemy) + (townGroups select _siEnemy) + (workerGroups select _siEnemy)

#Update
	~(_interval/2 + random _interval)
	? !(alive _unit) : exit
	_target = vehicle _unit
	
	? time < (_timeLastSent + 120): goto "Update"
	? count ([_siEnemy, stComm] call funcGetWorkingStructures) == 0 : goto "Update"
	_res = [_target, _si, _groups] call funcUpdateKnowsAbout
	_kaMax = _res select 0; _group = _res select 1
	? _kaMax < _kaReport : goto "Update"
	? _dist == -1 : goto "SkipRangeCheck"
	
	_bInRange = false
	{ if ( (_x distance _target) < _dist ) then { _bInRange = true } } foreach (units _group)
	? !_bInRange : _kaMax = 0
	#SkipRangeCheck

	? _kaMax > _kaReport : { _x reveal _target } forEach _groups; [_target, _siEnemy] exec "Server\SendEnemySpotted.sqs"; _timeLastSent = time
	
	goto "Update"
#ResUnits
_timeLastSent = [-60, -60]
_groups0 = (groupMatrix select si0) + (townGroups select si0) + (workerGroups select si0)
_groups1 = (groupMatrix select si1) + (townGroups select si1) + (workerGroups select si1)
#LoopResUnits
	~(_interval/2 + random _interval)
	? !(alive _unit) : exit
	_target = vehicle _unit
	
	#CheckSide0
	_siEnemy = si0
	? time < ((_timeLastSent select _siEnemy) + 120): goto "CheckSide1"
	? count ([_siEnemy, stComm] call funcGetWorkingStructures) == 0 : goto "CheckSide1"
	_res = [_target, _si, _groups0] call funcUpdateKnowsAbout
	_kaMax = _res select 0; _group = _res select 1
	? _kaMax < _kaReport : goto "CheckSide1"

	? _kaMax > _kaReport : { _x reveal _target } forEach _groups0; [_target, _siEnemy] exec "Server\SendEnemySpotted.sqs"; _timeLastSent set [_siEnemy, time]
	
	#CheckSide1
	_siEnemy = si1
	? time < ((_timeLastSent select _siEnemy) + 120): goto "LoopResUnits"
	? count ([_siEnemy, stComm] call funcGetWorkingStructures) == 0 : goto "LoopResUnits"
	_res = [_target, _si, _groups1] call funcUpdateKnowsAbout
	_kaMax = _res select 0; _group = _res select 1
	? _kaMax < _kaReport : goto "LoopResUnits"

	? _kaMax > _kaReport : { _x reveal _target } forEach _groups1; [_target, _siEnemy] exec "Server\SendEnemySpotted.sqs"; _timeLastSent set [_siEnemy, time]
	
	goto "LoopResUnits"