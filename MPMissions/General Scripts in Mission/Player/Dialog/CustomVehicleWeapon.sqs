; args: [dialog name, vehicle type(enum), vehicle, support]

_script = _this select 0; _enum = _this select 1; _vehicle = _this select 2; _support = _this select 3; _this = 0
_typeName = typeOf _vehicle
; create dialog
@!mutexDlg
mutexDlg = true; dlgID = dlgID + 1; _dlgID = dlgID
_dlg = createDialog _script
mutexDlg = false

; show background
ctrlShow [IDC_DialogBG_CR, !bool_TZK_DarkSkin]; ctrlShow [IDC_DialogBG_Light, bool_TZK_DarkSkin]

; initialize variables
_vi = call ([{PlaneUnits}, {GunshipUnits}, {HeliUnits}] select _enum) find _vehicle
? _vi == -1: exit
_info = call ([{PlanesInfo}, {GunshipInfo}, {HelisInfo}] select _enum) select _vi
_availMags = call ([{PlaneMags}, {GunshipMags}, {HeliMags}] select _enum)
_magInfo = call ([{PlaneMagInfo}, {GunshipMagInfo}, {HeliMagInfo}] select _enum)
? enum_TZK_CustomVehicle_Gunship == _enum: _rocketSlotLimit = 1

_si = siPlayer; _gi = giPlayer
_idcSlotText = IDC + 30; _idcYourMoneyText = IDC + 31; _idcMagPriceText = IDC + 32
_idcUpgradeText = IDC + 33; _idcTimeText = IDC + 34
_idcMagList = IDC + 20; _idcEquippedList = IDC + 21; ctrlEnable [_idcEquippedList, false]
_usedSlots = 0; _magCost = 0; _upgradeCost = 0; _timeCost = 0; _totalSlots = 9
call preprocessFile "Player\Dialog\CWV_getTotalSlot.sqf"

; initial available controls
ctrlSetText [_idcSlotText, format ["%1", _totalSlots - _usedSlots]]
ctrlSetText [_idcYourMoneyText, format ["$%1", groupMoneyMatrix select _si select _gi]]
ctrlSetText [_idcMagPriceText, format ["$%1",_magCost]]
ctrlSetText [_idcUpgradeText, format ["$%1", 0]]

_piWeapon = 0, _piName = 1, _piSide = 2, _piVehPrice = 3, _piUnitCost = 4, _piUnitSlot = 5, _piUnitTime = 6, _piUnitCount = 7
_i = 0; _c = count _magInfo
_shoppingCartMag = []; _shoppingCartCnt = []
# AddMagList
	; player globalChat format ["%1, %2", _i, _c]
	; skip improper side
	_var1 = _magInfo select _i select _piSide
	? _var1 != siBoth && _var1 != _si: goto "Continue_AddMagList"
	? _enum == enum_TZK_CustomVehicle_Gunship || _enum == enum_TZK_CustomVehicle_Helicopter: if !(_availMags call loadFile "Util\CWV\ValidMag.sqf") then {goto "Continue_AddMagList"}

	; fill whitespace for price
	_var1 = ""; _var2 = _magInfo select _i select _piUnitCost; _var3 = 1000
	while {_var3 > 1} do {if (_var2 < _var3) then {_var1 = _var1 + " "}; _var3 = _var3 / 10}
	;
	_idx = lbAdd [_idcMagList, _magInfo select _i select _piName];
	lbSetValue [_idcMagList, _idx, _i]
	_var3 = _magInfo select _i select _piUnitSlot
	_var1 = format ["$%1%2, Slot: %3", _var1, _var2, _var3]
	_idx = lbAdd [_idcMagList, _var1];
	lbSetValue [_idcMagList, _idx, _i]
	lbSetColor [_idcMagList, _idx, [1,1,1, 0.5]]
	
	# Continue_AddMagList
	_i = _i + 1
	? _i < _c: goto "AddMagList"

btnValue00 = 0
# Update
	? call dlgUpdated: exit
	? !(alive player): closeDialog 0; Exit

	? btnValue00 > 0: goto "ParserBtn00"
	~0.2
	? !alive _vehicle: hint "Vehicle destroyed.", exit
	? !alive _support: hint "Support destroyed.", exit
	? _vehicle distance _support > 2*rangeSupport: hint "Rearm failed. Support vehicle out of range.", exit
	ctrlSetText [_idcYourMoneyText, format ["$%1", groupMoneyMatrix select _si select _gi]]
	goto "Update"

# ParserBtn00
	_var1 = btnValue00; btnValue00 = 0
	? _var1 == 2^0 || _var1 == 2^1: goto "MagAddRem"
	? _var1 == 2^2: goto "MagClear"
	? _var1 == 2^3: goto "Buy"
	goto "Update"
# MagAddRem
	_idx = lbCurSel _idcMagList
	? _idx == -1: hint "No magazine selected."; goto "Update"
	_i = lbValue [_idcMagList, _idx]; _j = _shoppingCartMag find _i
	_var3 = _magInfo select _i select _piUnitSlot
	; ? _var1 == 2^0: goto "MagAdd"
	? _var1 == 2^1: goto "MagRem"
# MagAdd
	? _usedSlots + _var3 > _totalSlots: hint "Insufficient Slots.", goto "Update"
	? enum_TZK_CustomVehicle_Gunship == _enum && "Rocket" == _magInfo select _i select _piName: _magInfoIdx = _shoppingCartMag find _i, _var4 = 0, if (-1 != _magInfoIdx) then {_var4 = (_shoppingCartCnt select _magInfoIdx) * (_magInfo select _i select _piUnitSlot) / (_magInfo select _i select _piUnitCount)}, if (_var3 + _var4 > _rocketSlotLimit) then {hint "Can't carry more rockets!", goto "Update"}

	1 call loadFile "Player\Dialog\CWV_RefreshStat.sqf"
	goto "Update"
# MagRem
	? _j == -1: goto "Update"
	-1 call loadFile "Player\Dialog\CWV_RefreshStat.sqf"
	goto "Update"
# MagClear
	0 call loadFile "Player\Dialog\CWV_RefreshStat.sqf"
	goto "Update"
# Buy
	? !local _vehicle: hint "Rearm failed. The vehicle isn't local.", goto "Update"
	? _magCost + _upgradeCost > groupMoneyMatrix select siPlayer select giPlayer: hint "Insufficient fond.", goto "Update"
	? count _shoppingCartMag == 0: hint "No bought magazines.", goto "Update"
	closeDialog 0

	_timeStart = _time; { _vehicle removeMagazines _x } foreach (magazines _vehicle)
	vehiclesRearming set [count vehiclesRearming, _vehicle]
	? dev: _timeCost = 5
	_msg = format ["Rearm started, ready in %1s ...", _timeCost]
	_unit = driver _vehicle
	? _unit == player: hint _msg
	_unit groupChat _msg
	_timeComplete = _time + _timeCost
	_text = format ["Rearming. %1 seconds left.", (_time - _timeComplete) - (_time - _timeComplete)%0.1 + 0.1]
	? player in _vehicle: hint _text
	_range = 4*rangeSupport
	#Loop
		_vehicle say "Rearming_xj400";
		~5
		? !(alive _vehicle): _msg = "Rearm failed. Vehicle destroyed."; goto "Quit"
		? !(alive _support): _msg = "Rearm failed. Support vehicle destroyed."; goto "Quit"
		? (_vehicle distance _support) > _range: if (([positionAttach, (getPos _vehicle)] call funcDistH) > 100 && ([positionAttach, (getPos _support)] call funcDistH) > 100) then {_msg = "Rearm failed. Support vehicle out of range."; goto "Quit"}
		_text = format ["Rearming. %1 seconds left.", (_time - _timeComplete) - (_time - _timeComplete)%0.1 + 0.1]
		? player in _vehicle: hint _text
		? _time < _timeComplete: goto "Loop"

	? count magazines _vehicle == 0: call loadFile "Player\Dialog\CWV_RearmExec.sqf"
	? (_availMags find "Tomahawk_xj400") in _shoppingCartMag || (_availMags find "Raduga_xj400") in _shoppingCartMag: _vehicle say "NuclearMissileReady_xj400"

	_cost = _magCost + _upgradeCost
	while {_cost > 0} do {_amount = _cost, if (_cost > 9999) then {_amount = 9999, _cost = _cost - _amount} else {_cost = 0}, [_amount] exec "\TZK_Scripts_4_0_4\Player\SendMoneySpent.sqs"}
	_msg = format["Rearm Complete. $%1", _magCost + _upgradeCost]

# Quit
	? _msg != "" && _unit == player: hint _msg
	? _msg != "": _unit groupChat _msg
	? _unit != _vehicle: vehiclesRearming = vehiclesRearming - [_vehicle]
	exit