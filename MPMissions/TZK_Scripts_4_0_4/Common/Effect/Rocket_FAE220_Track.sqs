; args: [rocket, vehicle]
_rocket = _this select 0; _vehicle = _this select 1
_name = typeOf _rocket
? count sides > 0: _si = sides find (side _vehicle)
; _timeReset = _time + 1
#loop
_pos = getPos _rocket; _vel = velocity _rocket
~0.1
; ? !isNull _rocket: if (_time > _timeReset) Then {_pos = getPosASL _rocket, _vel = velocity _rocket, _rocket setVectorDirAndUp [_vel, [0,0,1]], _rocket setPosASL _pos, _rocket setVelocity _vel, _timeReset = _timeReset + 1}, goto "loop"
? !isNull _rocket: goto "loop"

_sensor = "EmptyDetector" camCreate _pos; _distance = _sensor distance _vehicle; _distance = _distance - _distance % 1; deleteVehicle _sensor
; _vehicle vehiclechat format ["Estimate Range: %1 meters", _distance]
? _distance < 250: if (player in _vehicle) then {playSound "DKMM_M_dud_xj400"}, _vehicle vehiclechat "Round dud, too close for warhead to prime", exit
? _distance > viewDistance && _si > -1: _distLimit = viewDistance, if (upgMatrix select _si select upgLongWeaponRange == 2) Then {_distLimit = 2*viewDistance}, if (_distance > _distLimit) Then {_vehicle vehiclechat "Rocket is out of CTI limit range, no explosion.", exit}
; Such a sentence will automatically get avoid of undefined variables.

; MP broadcast
_logic = "ExplodeLogic_FAE220_xj400" createVehicle _pos; [_logic, 60] exec "\TZK_Scripts_4_0_4\Common\DeleteUnitAfterDelay.sqs"

; {_pos set [_x, (_pos select _x) - (_pos select _x)%0.1]} forEach [0,1,2]
; {_vel set [_x, (_vel select _x) - (_vel select _x)%0.1]} forEach [0,1,2]
; _code = format [{[%1, %2] exec "\TZK_Objects\Scripts\Fired_EH\Rocket_FAE220_Impact.sqs"}, _pos, _vel]
; call _code; publicExec _code

[_pos, _vel, _name, _vehicle] exec "\TZK_Config_4_0_4\Scripts\Fired_EH\Rocket_FAE220_SubExplosion.sqs"