; args: [unit, si, gi]

_unit = _this select 0
_si = _this select 1
_gi = _this select 2

_unit call busySet

#Check
? !(alive _unit) || _unit != (vehicle _unit) : goto "Exit"
_magazines = _unit call funcGetNotEmptyMags;
? !(magSatchel in _magazines): if (magSatchel in (magazines _unit)) then {_unit removeMagazine magSatchel}; goto "Exit"

_res = [getPos _unit, _si] call funcGetClosestEnemyObject
_object = _res select 0

? (_unit distance _object) > 200 : goto "Exit"

_posDrop = [getPos _object, 5, 5] call funcGetRandomPos
_unit doMove _posDrop

_timeAbort = time + 2*60
#CheckDropPosReached

	~5	
	? !(alive _unit): goto "Exit"
	? !(alive _object): goto "Check"
	? time > _timeAbort : goto "Check"
	? (_unit distance _object) > 10 : goto "CheckDropPosReached"

_C4Mag = magSatchel
_magazines = _unit call funcGetNotEmptyMags;
_cBefore = "_x == _C4Mag" count _magazines
_unit fire [weaponPut, _C4Mag,_C4Mag]

	~1
? !(alive _unit) : goto "Exit"
_unit action ["SETTIMER"]
_cAfter = "_x == _C4Mag" count magazines _unit
? _cAfter == 1 && _cBefore == 1 : _unit removeMagazine _C4Mag

#MoveAway
_posMove = [getPos _object, 100, 100] call funcGetRandomPos
_unit doMove _posMove

~30
	
goto "Check"

#Exit
  _unit call busyClear
  exit
