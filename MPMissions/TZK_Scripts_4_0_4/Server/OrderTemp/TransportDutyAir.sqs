; args: [unit, si, gi, [wp, wp, dist, transport type (defined by TransportDutyTypeDefs), duration]]

_unit = _this select 0
_si = _this select 1
_gi = _this select 2
_params = _this select 3

; Get Correct Parameters. Need Pay Attention To Coefficients
_posPickup = ((wpCO select _si) select (_params select 0))
_posEject = ((wpCO select _si) select (_params select 1))
_distEject = 50*((_params select 2) + 1)

_duration = 180 * ((_params select 4) + 1)

; Initialize The Order Script
_timeStart = time; _timeAbort = _timeStart + _duration; _timeUp = _timeStart; _cycle = 30; _loop = 0
_unit call temporarySet
_waitloop = 0


; Wait For Unit Finish Its Busy-Work
#WaitReady
~5
? time > _timeAbort: 	_unit call temporaryClear; exit
? !(_unit call temporaryCheck): exit
? _unit call busyCheck: goto "WaitReady"

; Main Part Of Temporary Order

; Use busy to prevent AI from automatically moving for support in Temporary Transport Order
_unit call busySet

_groups = groupMatrix select _si
#Update
	_gi = ( _groups ) find ( (group _unit) )
	_transp = vehicle _unit
	? _unit != driver _transp: goto "Sleep"
	
	_posPickup set [2, 150]; _posEject set [2, 150]

	_distToPickup = [getPos _transp, _posPickup] call funcDistH
	_crew = _transp call funcGetCargoNum
	? _distToPickup > 200 && _crew > 2: goto "MoveEject"
	? _distToPickup < 200 && _crew > 10: goto "MoveOut"
	? _distToPickup < 200 && ((getPos _transp) select 2) < 5: _posMove = [_posPickup, 50, 50] call funcGetRandomPos; goto "WaitForCargo"
	? _distToPickup < 200 && ((getPos _transp) select 2) > 5: _posMove = [_posPickup, 50, 50] call funcGetRandomPos; goto "PrepareLand"
	
	#MovePickup
		_transp flyInHeight 150 + random 50
		[_transp] exec "\TZK_Scripts_4_0_4\Common\SendTransportTurnOn.sqs"
		_posMove = [_posPickup, 50, 50] call funcGetRandomPos
		[_unit, _posMove] call funcMoveAI
		
	_timeRepeat = time + 60
	#MovePickup_Check
	
		_timeUp = time + 10
		@ ( time > _timeUp || !(_unit call temporaryCheck) )
		? !(_unit call temporaryCheck): goto "EOF"
		? !(alive _unit) || !(alive _transp) || _transp != (vehicle _unit) || time > _timeAbort: goto "EOF"

		? time > _timeRepeat: [_unit, _posMove] call funcMoveAI; _timeRepeat = time + 60
		? ([_posMove, getPos _transp] call funcDistH) > 200: goto "MovePickup_Check"

_unit call busyClear
	[_unit, _si, _gi] exec "\TZK_Scripts_4_0_4\Server\AI_CheckSupport.sqs"
	#WaitSupportDone
	
		_timeUp = time + 5
		@ ( time > _timeUp || !(_unit call temporaryCheck) )
		? !(_unit call temporaryCheck): goto "EOF"
		? !(alive _unit) || !(alive _transp) || _transp != (vehicle _unit) || time > _timeAbort: goto "EOF"
		
		? (damage _transp) < 0.1: _unit call busyClear
		? _unit call busyCheck: goto "WaitSupportDone"

	_unit call busySet
	#PrepareLand
		_transp flyInHeight 150
		
	#PrepareLand_Check
		[_unit, _posMove] call funcMoveAI
	
		_timeUp = time + 5
		@ ( time > _timeUp || !(_unit call temporaryCheck) )
		? !(_unit call temporaryCheck): goto "EOF"
		? !(alive _unit) || !(alive _transp) || _transp != (vehicle _unit) || time > _timeAbort: goto "EOF"
		
		? ([_posMove, getPos _transp] call funcDistH) > 200 || (speed _transp) > 20: goto "PrepareLand_Check"

	#Land
		_transp flyInHeight 50
		[_unit, _posMove] call funcMoveAI
		
	_timeRetry = time + 60
	#Land_Check
	
		_timeUp = time + 5
		@ ( time > _timeUp || !(_unit call temporaryCheck) )
		? !(_unit call temporaryCheck): goto "EOF"
		? !(alive _unit) || !(alive _transp) || _transp != (vehicle _unit) || time > _timeAbort: goto "EOF"
		
		? time > _timeRetry: goto "PrepareLand"
		? !(unitReady _unit) && !( ([getPos _transp, _posMove] call funcDistH) < 50 && (speed _transp) < 20 ): goto "Land_Check"

	doStop _unit
	_transp land "LAND"
	_timeRetry = time + 60
	#Landed_Check
	
		_timeUp = time + 5
		@ ( time > _timeUp || !(_unit call temporaryCheck) )
		? !(_unit call temporaryCheck): goto "EOF"
		? !(alive _unit) || !(alive _transp) || _transp != (vehicle _unit) || time > _timeAbort: goto "EOF"
		
		? time > _timeRetry: goto "PrepareLand"
		? ((getPos _transp) select 2) > 5: goto "Landed_Check"

	#WaitForCargo
		_transp engineOn false
		[_transp] exec "\TZK_Scripts_4_0_4\Common\SendTransportTurnOn.sqs"
		
		_timeUp = time + 30
		@ ( time > _timeUp || !(_unit call temporaryCheck) )
		? !(_unit call temporaryCheck): goto "EOF"
		? !(alive _unit) || !(alive _transp) || _transp != (vehicle _unit) || time > _timeAbort: goto "EOF"

		_waitloop = _waitloop + 1; if ( _waitloop > 5 ) then { goto "MoveOut" }
		? _transp call funcGetCargoNum > (_transp call funcGetTranspVol) - 2: goto "MoveOut"
		? ((getPos _transp) select 2) > 5: goto "PrepareLand"
		? _transp call funcGetCargoNum < 4: goto "WaitForCargo"
		? _transp call funcGetCargoNum > _crew: _crew = _transp call funcGetCargoNum; goto "WaitForCargo"

	#MoveOut
		_waitloop = 0
		_transp flyInHeight 40
		_posMove = [_posEject, 50, 50] call funcGetRandomPos
		[_unit, _posMove] call funcMoveAI
		
		; wait for take off
		_timeUp = time + 30
		@ ( time > _timeUp || !(_unit call temporaryCheck) )
		? !(_unit call temporaryCheck): goto "EOF"
		? !(alive _unit) || !(alive _transp) || _transp != (vehicle _unit) || time > _timeAbort: goto "EOF"

	#MoveEject
		[_transp] exec "\TZK_Scripts_4_0_4\Common\SendTransportTurnOff.sqs"
		_transp flyInHeight 150 + random 50
		_posMove = [_posEject, 50, 50] call funcGetRandomPos
		[_unit, _posMove] call funcMoveAI
		
	_timeRepeat = time + 60
	#MoveEject_Check
	
		_timeUp = time + 5
		@ ( time > _timeUp || !(_unit call temporaryCheck) )
		? !(_unit call temporaryCheck): goto "EOF"
		? !(alive _unit) || !(alive _transp) || _transp != (vehicle _unit) || time > _timeAbort: goto "EOF"

		? time > _timeRepeat: [_unit, _posMove] call funcMoveAI; _timeRepeat = time + 60
		? ([_posMove, getPos _transp] call funcDistH) > _distEject: goto "MoveEject_Check"

	[_transp, _si] exec "\TZK_Scripts_4_0_4\Common\EjectAllCargo.sqs"
	
		_timeUp = time + 10
		@ ( time > _timeUp || !(_unit call temporaryCheck) )
		? !(_unit call temporaryCheck): goto "EOF"
		? !(alive _unit) || !(alive _transp) || _transp != (vehicle _unit) || time > _timeAbort: goto "EOF"
		
	goto "MovePickup"



; End Of File
#EOF_unit call busyClear
_unit call temporaryClear
exit


#Sleep
_loop = (time-_timeStart)/_cycle; _loop = 1 + _loop - _loop%1
_timeUp = _loop*_cycle + _timeStart

@ ( time > _timeUp || !(_unit call temporaryCheck) )
? !(_unit call temporaryCheck): goto "EOF"
? !(alive _unit) || _vehicle != (vehicle _unit) || time > _timeAbort: goto "EOF"
goto "Update"